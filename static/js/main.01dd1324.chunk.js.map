{"version":3,"sources":["helpers/capitalize.js","helpers/full-name.js","helpers/nested-obj.js","helpers/dig.js","components/form.js","components/info/info-form.js","components/info/info.js","components/education/education-form.js","components/education/education.js","components/experience/experience.js","helpers/update.js","helpers/obj-filter.js","helpers/max-date.js","components/experience/experience-form.js","components/experience/experiences.js","components/resume.js","App.js","reportWebVitals.js","index.js"],"names":["capitalize","str","charAt","toUpperCase","slice","fullName","name","first","last","nestedObj","value","fields","reverse","reduce","obj","field","dig","StyledForm","styled","form","Controls","div","Field","this","props","id","label","children","htmlFor","Component","Form","onFormSubmit","bind","onFormCancel","e","toggleEdit","submitForm","subject","preventDefault","onSubmit","title","type","onClick","stateField","nestedFields","length","Object","assign","state","target","setState","InputField","inputProps","PhoneInputField","bindField","FieldComponent","binding","onChange","onFieldChange","apply","InfoForm","info","onPhoneChange","phone","placeholder","required","defaultCountry","StyledInfo","StyledContact","address","Info","handleEdit","email","Contact","href","EducationForm","education","school","EducationHeader","School","h3","Education","degree","date","GraduationDate","parse","Date","isValid","dateContext","formattedDate","format","isPast","Experience","experience","company","tasks","startDate","endDate","entries","map","task","deleteExperience","update","updatedObj","Map","fromEntries","objFilter","callback","filteredEntries","filter","maxDate","a","b","stringToDate","max","ExperienceForm","deleteTask","addTask","onChanger","prop","uniqid","remainingTasks","toggler","min","onDelete","TaskInput","Title","h2","Experiences","handleAdd","toggleFormShow","experiences","showForm","showEdit","submitExperience","get","StyledResume","Resume","isEditing","section","isEditingValue","InfoComponent","EducationComponent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01dd1324.chunk.js","sourcesContent":["function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport default capitalize;\n","import capitalize from './capitalize';\n\nfunction fullName(name) {\n  return `${capitalize(name.first)} ${capitalize(name.last)}`;\n}\n\nexport default fullName;\n","// returns { [fields[2]]: { [fields[1]]: { [fields[0]]: value } } }\nfunction nestedObj(value, ...fields) {\n  return fields\n    .reverse()\n    .slice(1)\n    .reduce(\n      (obj, field) => {\n        return { [field]: obj };\n      },\n      { [fields[0]]: value }\n    );\n}\n\nexport default nestedObj;\n","function dig(obj, ...fields) {\n  return fields.reduce((value, field) => {\n    return value[field];\n  }, obj);\n}\n\nexport default dig;\n","import { Component } from 'react';\nimport styled from 'styled-components';\nimport nestedObj from '../helpers/nested-obj';\nimport dig from '../helpers/dig';\nimport PhoneInput from 'react-phone-number-input/input';\nimport capitalize from '../helpers/capitalize';\n\nconst StyledForm = styled.form`\n  h2 {\n    margin: 0;\n  }\n\n  input {\n    padding: 0.25em;\n    margin: 0 0.5em;\n  }\n\n  &:not(:first-child) {\n    margin-top: 0.5em;\n  }\n\n  *:not(:last-child) {\n    margin-bottom: 0.5em;\n  }\n`;\n\nconst Controls = styled.div`\n  input {\n    margin-left: 0;\n    margin-right: 0.5em;\n  }\n`;\n\nclass Field extends Component {\n  render() {\n    const { id, label, children } = this.props;\n\n    return (\n      <div>\n        <label htmlFor={id}>{label}</label>\n        {children}\n      </div>\n    );\n  }\n}\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onFormCancel = this.onFormCancel.bind(this);\n  }\n\n  static onFieldChange(...fields) {\n    const stateField = fields[0];\n    const nestedFields = fields.slice(1);\n\n    return (e) => {\n      let value;\n\n      if (fields.length > 1) {\n        value = Object.assign(\n          {},\n          this.state[stateField],\n          nestedObj(e.target.value, nestedFields)\n        );\n      } else {\n        value = e.target.value;\n      }\n\n      this.setState({\n        [stateField]: value,\n      });\n    };\n  }\n\n  onFormSubmit(e) {\n    const { toggleEdit, submitForm, subject } = this.props;\n\n    e.preventDefault();\n    submitForm(subject);\n    toggleEdit();\n  }\n\n  onFormCancel(e) {\n    e.preventDefault();\n    this.props.toggleEdit();\n  }\n\n  render() {\n    return (\n      <StyledForm onSubmit={this.onFormSubmit}>\n        <h2>{this.props.title}</h2>\n        {this.props.children}\n        <Controls>\n          <input type=\"button\" onClick={this.onFormCancel} value=\"Cancel\" />\n          <input type=\"submit\" value=\"Submit\" />\n        </Controls>\n      </StyledForm>\n    );\n  }\n}\n\nclass InputField extends Component {\n  render() {\n    const {\n      id,\n      label = capitalize(id) + ':',\n      children,\n      ...inputProps\n    } = this.props;\n\n    return (\n      <Field id={id} label={label}>\n        <input id={id} {...inputProps} />\n        {children}\n      </Field>\n    );\n  }\n}\n\nclass PhoneInputField extends Component {\n  render() {\n    const { id, label, ...inputProps } = this.props;\n\n    return (\n      <Field id={id} label={label}>\n        <PhoneInput id={id} {...inputProps} />\n      </Field>\n    );\n  }\n}\n\nconst bindField = function (FieldComponent, binding) {\n  return ({ field, fields = [field], ...props }) => {\n    return (\n      <FieldComponent\n        onChange={Form.onFieldChange.apply(binding, fields)}\n        value={dig(binding.state, ...fields)}\n        {...props}\n      />\n    );\n  };\n};\n\nexport default Form;\nexport { InputField, bindField, PhoneInputField, StyledForm, Controls };\n","import { Component } from 'react';\nimport Form, { bindField, InputField, PhoneInputField } from '../form';\n\nclass InfoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = Object.assign({}, this.props.info);\n    this.InputField = bindField(InputField, this);\n    this.onPhoneChange = this.onPhoneChange.bind(this);\n  }\n\n  onPhoneChange(phone) {\n    this.setState({\n      phone,\n    });\n  }\n\n  render() {\n    const { info, ...props } = this.props;\n    const InputField = this.InputField;\n\n    return (\n      <Form subject={this.state} {...props}>\n        <InputField\n          id=\"first-name\"\n          label=\"First Name:\"\n          fields={['name', 'first']}\n          placeholder=\"John\"\n          required\n        />\n        <InputField\n          id=\"last-name\"\n          label=\"Last Name:\"\n          fields={['name', 'last']}\n          placeholder=\"Smith\"\n          required\n        />\n        <InputField\n          id=\"email\"\n          type=\"email\"\n          label=\"Email:\"\n          field=\"email\"\n          placeholder=\"jsmith@example.com\"\n        />\n        <PhoneInputField\n          id=\"phone\"\n          label=\"Phone:\"\n          defaultCountry=\"US\"\n          placeholder=\"Enter a phone number\"\n          onChange={this.onPhoneChange}\n          value={this.state.phone}\n        />\n      </Form>\n    );\n  }\n}\n\nexport default InfoForm;\n","import { Component } from 'react';\nimport { AiOutlineMail, AiOutlinePhone } from 'react-icons/ai';\nimport fullName from '../../helpers/full-name';\nimport styled from 'styled-components';\nimport InfoForm from './info-form';\n\nconst StyledInfo = styled.div`\n  text-align: center;\n\n  h1 {\n    border-bottom: 1px solid black;\n    margin: 0;\n  }\n`;\n\nconst StyledContact = styled.address`\n  display: flex;\n  justify-content: center;\n  margin: 0.25em;\n\n  a {\n    color: inherit;\n    font-style: normal;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    * {\n      margin-right: 0.2em;\n    }\n  }\n\n  & > *:not(:last-child):after {\n    content: '|';\n    margin: 0 0.25em;\n  }\n`;\n\nclass Info extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleEdit() {\n    this.props.toggleEdit();\n  }\n\n  render() {\n    const {\n      info: { name, email, phone },\n    } = this.props;\n\n    return (\n      <StyledInfo>\n        <h1>{fullName(name)}</h1>\n        <Contact email={email} phone={phone} />\n        <button onClick={this.handleEdit}>Edit</button>\n      </StyledInfo>\n    );\n  }\n}\n\nclass Contact extends Component {\n  render() {\n    const { email, phone } = this.props;\n\n    return (\n      <StyledContact>\n        {email && (\n          <a href={`mailto:${email}`}>\n            <AiOutlineMail />\n            {email}\n          </a>\n        )}\n        {phone && (\n          <a href={`tel:${phone}`}>\n            <AiOutlinePhone />\n            {phone}\n          </a>\n        )}\n      </StyledContact>\n    );\n  }\n}\n\nexport default Info;\nexport { InfoForm };\n","import { Component } from 'react';\nimport Form, { bindField, InputField } from '../form';\n\nclass EducationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = Object.assign({}, this.props.education);\n    this.InputField = bindField(InputField, this);\n  }\n\n  render() {\n    const { education, ...props } = this.props;\n    const { school } = this.state;\n    const InputField = this.InputField;\n\n    return (\n      <Form subject={this.state} {...props}>\n        <InputField\n          id=\"school-name\"\n          label=\"School Name:\"\n          field=\"school\"\n          placeholder=\"Harvard University\"\n        />\n        <InputField\n          id=\"degree-type\"\n          label=\"Degree type:\"\n          fields={['degree', 'type']}\n          placeholder=\"BS\"\n          required={school !== ''}\n        />\n        <InputField\n          id=\"degree-field\"\n          label=\"Field of study:\"\n          fields={['degree', 'field']}\n          placeholder=\"Computer Science\"\n          required={school !== ''}\n        />\n        <InputField\n          id=\"graduation-date\"\n          type=\"date\"\n          label=\"Graduation date:\"\n          field=\"date\"\n        />\n      </Form>\n    );\n  }\n}\n\nexport default EducationForm;\n","import { Component } from 'react';\nimport styled from 'styled-components';\nimport EducationForm from './education-form';\nimport { format, parse, isPast, isValid } from 'date-fns';\n\nconst EducationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid black;\n\n  & > *:not(:last-child) {\n    margin-right: 0.25em;\n  }\n\n  h2 {\n    margin: 0.1em 0;\n  }\n`;\n\nconst School = styled.h3`\n  text-transform: uppercase;\n  margin: 0.1em 0;\n`;\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleEdit() {\n    this.props.toggleEdit();\n  }\n\n  render() {\n    const {\n      education: { school, degree, date },\n    } = this.props;\n\n    return (\n      <div>\n        <EducationHeader>\n          <h2>Education</h2>\n          <button onClick={this.handleEdit}>Edit</button>\n        </EducationHeader>\n        {school && <School>{school}</School>}\n        {school && (\n          <div>\n            {degree.type && degree.field && (\n              <div>\n                {degree.type} in {degree.field}\n              </div>\n            )}\n            <GraduationDate date={date} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass GraduationDate extends Component {\n  constructor(props) {\n    super(props);\n    this.date = parse(props.date, 'yyyy-MM-dd', new Date());\n  }\n\n  get formattedDate() {\n    return format(this.date, 'MMM dd, yyyy');\n  }\n\n  get dateContext() {\n    if (isPast(this.date)) {\n      return 'Graduated';\n    } else {\n      return 'Expected graduation';\n    }\n  }\n\n  render() {\n    if (isValid(this.date)) {\n      return (\n        <span>\n          {this.dateContext}: {this.formattedDate}\n        </span>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Education;\nexport { EducationForm };\n","import { Component } from 'react';\n\nclass Experience extends Component {\n  render() {\n    const {\n      experience: { company, title, tasks, startDate, endDate },\n    } = this.props;\n\n    return (\n      <div>\n        <div>\n          <h2>{company}</h2>\n        </div>\n        <div>\n          {startDate} - {endDate}\n        </div>\n        <p>{title}</p>\n        <ul>\n          {Object.entries(tasks).map(([id, task]) => {\n            return <li key={id}>{task}</li>;\n          })}\n        </ul>\n        <button onClick={() => this.props.toggleEdit()}>Edit</button>\n        <button onClick={() => this.props.deleteExperience()}>Delete</button>\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n","const update = (obj, updatedObj) => {\n  const map = new Map([...Object.entries(obj), ...Object.entries(updatedObj)]);\n\n  return Object.fromEntries([...map.entries()]);\n};\n\nexport default update;\n","const objFilter = (obj, callback) => {\n  const filteredEntries = Object.entries(obj).filter(callback);\n\n  return Object.fromEntries(filteredEntries);\n};\n\nexport default objFilter;\n","import { format, parse } from 'date-fns';\n\nfunction maxDate(a, b) {\n  function stringToDate(date) {\n    return parse(date, 'yyyy-MM-dd', new Date());\n  }\n\n  a = stringToDate(a);\n  b = stringToDate(b);\n\n  const max = a > b ? a : b;\n\n  return format(max, 'yyyy-MM-dd');\n}\n\nexport default maxDate;\n","import { Component } from 'react';\nimport { StyledForm, Controls, InputField } from '../form';\nimport uniqid from 'uniqid';\nimport update from '../../helpers/update';\nimport objFilter from '../../helpers/obj-filter';\nimport maxDate from '../../helpers/max-date';\n\nclass ExperienceForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      experience: this.props.experience,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.onChanger = Object.fromEntries(\n      ['company', 'title', 'endDate'].map((prop) => {\n        return [prop, this.onChange(prop)];\n      })\n    );\n    this.onChanger['startDate'] = (e) => {\n      const value = e.target.value;\n      this.setState(({ experience }) => {\n        return {\n          experience: update(experience, {\n            startDate: value,\n            endDate: maxDate(experience.endDate, value),\n          }),\n        };\n      });\n    };\n  }\n\n  onChange(prop, callback = (value) => value) {\n    return (e) => {\n      this.setState({\n        experience: update(this.state.experience, {\n          [prop]: callback(e.target.value),\n        }),\n      });\n    };\n  }\n\n  addTask() {\n    this.setState({\n      experience: update(this.state.experience, {\n        tasks: update(this.state.experience.tasks, { [uniqid()]: '' }),\n      }),\n    });\n  }\n\n  deleteTask(id) {\n    this.setState(({ experience }) => {\n      const remainingTasks = objFilter(\n        experience.tasks,\n        ([taskId]) => taskId !== id\n      );\n      return {\n        experience: update(experience, { tasks: remainingTasks }),\n      };\n    });\n  }\n\n  render() {\n    const {\n      experience,\n      experience: { company, title, startDate, endDate, tasks },\n    } = this.state;\n\n    return (\n      <StyledForm\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.props.submitForm(experience);\n          this.props.toggler();\n        }}\n      >\n        <h2>{this.props.title}</h2>\n\n        <InputField\n          id=\"company\"\n          onChange={this.onChanger.company}\n          value={company}\n          required\n        />\n        <InputField\n          id=\"title\"\n          onChange={this.onChanger.title}\n          value={title}\n          required\n        />\n        <InputField\n          id=\"start-date\"\n          type=\"date\"\n          label=\"Start Date:\"\n          onChange={this.onChanger.startDate}\n          value={startDate}\n          required\n        />\n        <InputField\n          id=\"end-date\"\n          type=\"date\"\n          label=\"End Date:\"\n          min={startDate}\n          onChange={this.onChanger.endDate}\n          value={endDate}\n          required\n        />\n\n        <fieldset>\n          <legend>Tasks: </legend>\n          {Object.entries(tasks).map(([id, task]) => {\n            return (\n              <TaskInput\n                task={task}\n                key={id}\n                id={id}\n                onChange={this.onChange('tasks', (value) => {\n                  return update(tasks, { [id]: value });\n                })}\n                onDelete={(e) => {\n                  e.preventDefault();\n                  this.deleteTask(id);\n                }}\n                required\n              />\n            );\n          })}\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              this.addTask();\n            }}\n          >\n            Add task\n          </button>\n        </fieldset>\n        <Controls>\n          <input\n            type=\"button\"\n            value=\"Cancel\"\n            onClick={(e) => {\n              e.preventDefault();\n              this.props.toggler();\n            }}\n          />\n          <input type=\"submit\" value=\"Submit\" />\n        </Controls>\n      </StyledForm>\n    );\n  }\n}\n\nclass TaskInput extends Component {\n  render() {\n    const { task, onChange, onDelete, ...props } = this.props;\n    return (\n      <InputField label=\"\" value={task} onChange={onChange} {...props}>\n        <button onClick={onDelete}>Delete</button>\n      </InputField>\n    );\n  }\n}\n\nexport default ExperienceForm;\n","import { Component } from 'react';\nimport Experience from './experience';\nimport ExperienceForm from './experience-form';\nimport { format } from 'date-fns';\nimport uniqid from 'uniqid';\nimport styled from 'styled-components';\n\nconst Title = styled.h2`\n  border-bottom: 1px solid black;\n`;\n\nclass Experiences extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd() {\n    this.props.toggleFormShow();\n  }\n\n  render() {\n    const {\n      title,\n      experiences,\n      showForm,\n      showEdit,\n      deleteExperience,\n      submitExperience,\n      toggleEdit,\n    } = this.props;\n\n    return (\n      <div>\n        <Title>{title}</Title>\n        {Object.entries(experiences).map(([id, experience]) => {\n          if (showEdit.get(id)) {\n            return (\n              <ExperienceForm\n                title=\"Edit Experience\"\n                experience={experience}\n                key={id}\n                toggler={() => toggleEdit(id)}\n                submitForm={(experience) => submitExperience(id, experience)}\n              />\n            );\n          } else {\n            return (\n              <Experience\n                experience={experience}\n                key={id}\n                toggleEdit={() => toggleEdit(id)}\n                deleteExperience={() => deleteExperience(id)}\n              />\n            );\n          }\n        })}\n        <button onClick={this.handleAdd}>Add experience</button>\n        {showForm && (\n          <ExperienceForm\n            title=\"New Experience\"\n            toggler={this.handleAdd}\n            submitForm={(experience) => submitExperience(uniqid(), experience)}\n            experience={{\n              startDate: format(new Date(), 'yyyy-MM-dd'),\n              endDate: format(new Date(), 'yyyy-MM-dd'),\n              company: '',\n              title: '',\n              tasks: {},\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Experiences;\n","import { Component } from 'react';\nimport Info, { InfoForm } from './info/info';\nimport Education, { EducationForm } from './education/education';\nimport Experiences from './experience/experiences';\nimport styled from 'styled-components';\nimport { format } from 'date-fns';\nimport update from '../helpers/update';\nimport objFilter from '../helpers/obj-filter';\n\nconst StyledResume = styled.div`\n  margin: 1em;\n  padding: 1em;\n  border: 1px solid black;\n`;\n\nclass Resume extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      info: {\n        name: {\n          first: 'Your',\n          last: 'Name',\n        },\n        email: '',\n        phone: '',\n      },\n      education: {\n        school: '',\n        degree: {\n          type: '',\n          field: '',\n        },\n        date: format(new Date(), 'yyyy-MM-dd'),\n      },\n      experiences: {},\n      isEditing: new Map([\n        ['info', false],\n        ['education', false],\n        ['experience', false],\n        ['experiences', new Map()],\n      ]),\n    };\n\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.submitExperience = this.submitExperience.bind(this);\n    this.deleteExperience = this.deleteExperience.bind(this);\n  }\n\n  toggleEdit(section) {\n    return (id) => {\n      this.setState((state) => {\n        const isEditing = state.isEditing.get(section);\n        const isEditingValue = id\n          ? new Map([...isEditing, [id, !isEditing.get(id)]])\n          : !isEditing;\n\n        return {\n          isEditing: new Map([...state.isEditing, [section, isEditingValue]]),\n        };\n      });\n    };\n  }\n\n  submitForm(field) {\n    return (state) => {\n      this.setState({ [field]: state });\n    };\n  }\n\n  submitExperience(id, experience) {\n    this.setState({\n      experiences: update(this.state.experiences, {\n        [id]: experience,\n      }),\n    });\n  }\n\n  deleteExperience(id) {\n    this.setState({\n      experiences: objFilter(this.state.experiences, ([expId]) => expId !== id),\n    });\n  }\n\n  render() {\n    const { education, info, isEditing } = this.state;\n    const InfoComponent = isEditing.get('info') ? InfoForm : Info;\n    const EducationComponent = isEditing.get('education')\n      ? EducationForm\n      : Education;\n\n    return (\n      <StyledResume>\n        <InfoComponent\n          title=\"Info\"\n          info={info}\n          toggleEdit={this.toggleEdit('info')}\n          submitForm={this.submitForm('info')}\n        />\n        <EducationComponent\n          title=\"Education\"\n          education={education}\n          toggleEdit={this.toggleEdit('education')}\n          submitForm={this.submitForm('education')}\n        />\n        <Experiences\n          title=\"Experience\"\n          experiences={this.state.experiences}\n          toggleFormShow={this.toggleEdit('experience')}\n          toggleEdit={this.toggleEdit('experiences')}\n          showForm={isEditing.get('experience')}\n          showEdit={isEditing.get('experiences')}\n          submitExperience={this.submitExperience}\n          deleteExperience={this.deleteExperience}\n        />\n      </StyledResume>\n    );\n  }\n}\n\nexport default Resume;\n","import './App.css';\nimport Resume from './components/resume';\n\nfunction App() {\n  return <Resume />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}